/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public bool IsBalanced(TreeNode root) {
        if (root == null) return true;
        int left = MaxDepth(root.left);
        int right = MaxDepth(root.right);
        int depthDiff = Math.Abs(left-right);
        bool subBalance = IsBalanced(root.right)&& IsBalanced(root.left);

        return (depthDiff<=1 && subBalance);
    }

    private int MaxDepth(TreeNode root){
        if(root == null) return 0;
        return 1 + Math.Max(MaxDepth(root.left), MaxDepth(root.right));
    } 

}
